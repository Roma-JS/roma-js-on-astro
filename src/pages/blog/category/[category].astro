---
import BlogPostListLayout from '@layouts/BlogPostList.astro';
import type { MarkdownInstance } from 'astro';
import { l10n } from '../../../i18n/config';
import {
  Frontmatter,
  computeAllCategories,
  Category,
  descendingCreatedAtComparator,
} from 'utils/blog';

export interface Props {
  category: Category;
  categories: Category[];
}

export async function getStaticPaths() {
  const posts = (await Astro.glob(
    '../post/**/*.md'
  )) as MarkdownInstance<Frontmatter>[];
  const allCategories = computeAllCategories(posts, import.meta.env.BASE_URL);

  const allCategoriesList = Array.from(allCategories.values());

  return allCategoriesList.map((category) => {
    return {
      params: {
        category: category.slug,
      },
      props: {
        category,
        categories: allCategoriesList
          .filter(({ url }) => category.url !== url)
          .sort((a, b) => b.posts.length - a.posts.length),
      },
    };
  });
}

const {
  category: { posts, name: categoryName },
  categories,
} = Astro.props;
const description = `Category: ${categoryName}`;
const lang = 'it';
const sortedPostsByDate = posts.slice().sort(descendingCreatedAtComparator);
---

<BlogPostListLayout
  lang={lang}
  title={l10n('categoryTitle', { categoryTitle: categoryName })}
  description={description}
  posts={sortedPostsByDate}
  categories={categories}
/>
