---
import HpLayout from '@layouts/Hp.astro';
import { getI18nRouteParams } from '@i18n/config';
import { getEnHpContent } from '../api/hp/en.json';
import { getHpItContent } from '../api/hp/it.json';
import { hpUrlMap } from 'utils/routing';
import type { Lang } from '@i18n/types';

export interface Props {
  lang: Lang;
  permalink?: string;
}

export async function getStaticPaths() {
  return getI18nRouteParams().map((params) => ({ params }));
}

function getProp<Key extends keyof Props>(key: Key): Props[Key] {
  return Astro.props[key] ?? (Astro.params[key as keyof typeof Astro.params] as Props[Key]);
}

function getContentByLang(lang: Lang) {
  switch (lang) {
    case 'it': {
      return getHpItContent();
    }
    case 'en': {
      return getEnHpContent();
    }
    default: {
      throw new Error('unsupported lang received: ' + lang);
    }
  }
}

const lang = getProp('lang');
const { title, description, sections } = await getContentByLang(lang);
const permalink = Astro.props.permalink;
---

<HpLayout
  lang={lang as Lang}
  title={title}
  description={description}
  urlMap={hpUrlMap}
  sections={sections}
  permalink={permalink}
/>
