@use '../../styles/mixins/breakpoints' as br;

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes dash {
  0% {
    stroke-dashoffset: 1000;
  }

  100% {
    stroke-dashoffset: 0;
  }
}

:root {
  --navbar--height--mobile: 60px;
  --navbar--height--desktop: 50px;

  --navbar--padding--mobile: 0 14px;
  --navbar--padding--desktop: 0 16px;

  --navbar--gap: 15px;
}

menu {
  padding: 0;
}

.navbar {
  --navbar--height: var(--navbar--height--mobile);
  --navbar--padding: var(--navbar--padding--mobile);

  composes: d-flex from global;

  place-content: space-between;
  place-items: center;

  width: 100%;
  height: var(--navbar--height);
  padding: var(--navbar--padding);
  background-color: var(--bg-primary);
  overflow: hidden;

  @include br.media-breakpoint-up(lg) {
    --navbar--height: var(--navbar--height--desktop);
    --navbar--padding: var(--navbar--padding--desktop);
  }
}

.navbarNavWrapper {
  position: fixed;
  inset: var(--navbar--height) 0 0;

  display: flex;
  place-content: start;
  place-items: center;
  flex-flow: column-reverse nowrap;

  background-color: var(--bg-primary);

  opacity: 0;
  visibility: hidden;

  transition: opacity 0.3s ease-in-out;

  @include br.media-breakpoint-up(lg) {
    position: static;
    inset: auto;

    display: inline-flex;
    flex-flow: row nowrap;

    opacity: 1;
    visibility: visible;
  }

  :global(.btn.btn-small) {
    min-width: 68px;
    padding: 0 4px;

    font-size: 18px;
    font-weight: 700;
    letter-spacing: 0;
    white-space: nowrap;
    text-transform: capitalize;
  }

  [aria-expanded='true'] ~ & {
    flex-flow: column nowrap;

    opacity: 1;
    visibility: visible;
    z-index: 3;

    :global(.btn.btn-small) {
      // MDN DOCS: duration | easing-function | delay | iteration-count | direction | fill-mode | play-state | name
      // https://developer.mozilla.org/en-US/docs/Web/CSS/animation#syntax
      animation: 300ms ease-in-out calc(150ms + 75ms * var(--index, 0)) both
        fadeInUp;

      @include br.media-breakpoint-up(lg) {
        animation: none;
      }
    }

    .brandArea {
      display: block;

      .animatedBrandMenuGroup path {
        stroke-dasharray: 1000;

        // MDN DOCS: duration | easing-function | delay | iteration-count | direction | fill-mode | play-state | name
        // https://developer.mozilla.org/en-US/docs/Web/CSS/animation#syntax
        animation: 5s ease-in-out both dash;
      }
    }
  }
}

.navbarDivider {
  @include br.media-breakpoint-up(lg) {
    display: flex;
    justify-content: center;
    align-items: center;

    height: 100%;

    padding-left: var(--navbar--gap);
    border-left: 2px solid var(--text-primary);
    margin-left: var(--navbar--gap);
  }
}

.navbarNav {
  display: flex;
  flex-flow: column nowrap;
  place-content: start;
  place-items: center;
  gap: var(--navbar--gap);

  padding-top: 58px;

  @include br.media-breakpoint-up(lg) {
    --navbar--gap: 5px;
    flex-flow: row nowrap;

    padding-top: 0;
  }

  :global(.btn.btn-small) {
    img {
      filter: invert(1);
    }

    &:hover {
      img {
        filter: invert(0);
      }
    }
  }
}

.navbarNavDiscordLink {
  display: inline-flex;

  @include br.media-breakpoint-up(lg) {
    display: none;
  }
}

.rightSide {
  composes: d-inline-flex from global;
  position: relative;
}

.brandArea {
  position: absolute;
  bottom: 0;
  right: 0;

  display: none;

  width: 54vw;
  width: min(54vw, 360px);
}

.hamburgerMenuBtn {
  position: relative;

  background: transparent;

  width: 44px;
  height: 44px;
  padding: 0;
  border: none;
  margin: 0;
  box-shadow: none;

  outline: none;

  @include br.media-breakpoint-up(lg) {
    display: none;
  }

  &:focus-visible {
    outline-width: 2px;
    outline-style: solid;
    outline-offset: 2px;
  }

  &::before,
  &::after {
    content: '';

    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    display: block;

    opacity: 1;

    transition: opacity 0.3s linear;
    will-change: opacity;
  }

  &::before {
    background-image: var(--hamburger-menu-open);
  }

  &::after {
    background-image: var(--hamburger-menu-close);
    opacity: 0;
  }

  &[aria-expanded='true'] {
    &::before {
      opacity: 0;
    }

    &::after {
      opacity: 1;
    }
  }
}
