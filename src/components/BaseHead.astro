---
import { generateLinkRelAlternateProps } from '@i18n/config';
import { getCanonicalURL } from 'utils/routing';
export interface Props {
  title: string;
  description: string;
  permalink?: string;
}

const canonicalURL = getCanonicalURL(Astro);

const { title, description, permalink = canonicalURL } = Astro.props as Props;

const ogImage = new URL(canonicalURL.origin);
ogImage.pathname = '/assets/og-img.png';

// @see https://developers.google.com/search/docs/advanced/crawling/localized-versions
const linkRelAlternateProps = generateLinkRelAlternateProps(canonicalURL);
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="created" content={import.meta.env.PUBLIC_BUILD_DATE} />
<meta name="title" content={title} />
<meta name="description" content={description} />
<title>{title}</title>
<link rel="icon" type="image/x-icon" href="/assets/favicon.ico" />
<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={permalink} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={ogImage.href} />
<meta property="og:type" content="website" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={permalink} />
<meta property="twitter:title" content={title} />
<meta name="twitter:site" content={import.meta.env.PUBLIC_TWITTER_HANDLE} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={ogImage.href} />
<meta
  property="twitter:image:alt"
  content="RomaJS, il meetup javascript di Roma"
/>
<Fragment>
  {
    linkRelAlternateProps.map(({ hreflang, href }) => (
      <link rel="alternate" href={href} hreflang={hreflang} />
    ))
  }
</Fragment>
